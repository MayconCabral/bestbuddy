import { useEffect, useContext } from 'react';
import { motion as m } from 'framer-motion';
import Context from '../context/Context';

import  useResizeWindow  from '../hooks/useResizeWindow';
import Cards from '../components/Cards';
import Button from '../components/Button';
import Input from '../components/Input';
import { wave, fallWave } from '../animation/gallery';
import { btn } from '../animation/home';


export default function Gallery() {    
    const { dogPicturesCONTEXT, nextPicturesCONTEXT } = useContext(Context);
    
    const width = useResizeWindow();

    const displayCards = () => {
        if (width <= 683) return 4;
        if (width <= 900) return 6;
        if (width <= 1232) return 10;
        if (width >= 1232) return 12;
    }
    
    useEffect(() => {

    }, [dogPicturesCONTEXT])

    return (
       <main className='gallery'>
            <m.div 
            variants={wave}
            initial='hidden'
            animate='visible'
            exit='exit'
            className='gallery__wave'
            ></m.div>
            <m.div variants={fallWave} exit='exit' className="gallery__fallWave">
            <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 width="100%" viewBox="0 0 5000 4666" enable-background="new 0 0 5000 4666" xmlSpace="preserve">
<path fill="#5594B5" opacity="1.000000" stroke="none" 
	d="
M11.999987,4672.000000 
	C9.341649,4672.000000 6.683299,4672.000000 4.000000,4672.000000 
	C4.000000,4495.892578 4.000000,4319.785156 5.504854,4141.405762 
	C8.384559,4135.529297 10.699875,4131.988281 10.949617,4128.307129 
	C11.579875,4119.017090 11.344219,4109.663086 11.344284,4100.334961 
	C11.353745,2746.877441 11.351611,1393.419922 11.380111,39.962414 
	C11.380363,27.974939 11.784451,15.987472 12.000000,4.000000 
	C1675.704224,4.000000 3339.408447,4.000000 5004.000000,4.000000 
	C5004.000000,1492.107300 5004.000000,2980.214844 5002.783203,4469.536133 
	C4992.954590,4465.708496 4984.433105,4460.505371 4975.717285,4455.650879 
	C4923.937012,4426.811523 4872.196289,4397.899414 4820.284180,4369.297852 
	C4708.873535,4307.914062 4596.519043,4248.364258 4480.877441,4195.216797 
	C4372.490234,4145.402832 4262.018066,4101.002441 4147.923828,4065.862061 
	C4005.868652,4022.109863 3860.761719,3996.452637 3712.074463,3992.048584 
	C3615.299316,3989.182373 3518.949219,3994.576416 3423.177979,4008.845215 
	C3346.054443,4020.335938 3270.011475,4036.965820 3194.968750,4058.223877 
	C3085.185791,4089.322754 2979.226807,4130.628418 2875.343750,4177.493652 
	C2789.134766,4216.385254 2704.704834,4258.932617 2620.529785,4301.994141 
	C2563.623047,4331.106934 2506.727051,4360.240234 2449.844727,4389.400391 
	C2345.535889,4442.873535 2240.118408,4493.981445 2131.531494,4538.300293 
	C1975.888062,4601.825195 1815.145996,4645.309082 1647.389160,4661.083984 
	C1631.477417,4662.580566 1615.546631,4663.886719 1599.612549,4665.125977 
	C1593.531982,4665.599609 1587.631226,4666.125977 1584.000000,4672.000000 
	C1519.892578,4672.000000 1455.785034,4672.000000 1389.129883,4670.599609 
	C1380.446655,4663.760254 1372.695435,4665.027344 1365.573608,4664.625488 
	C1306.330078,4661.276855 1247.633545,4653.235840 1189.290771,4642.971191 
	C1095.471313,4626.465332 1003.468994,4602.535645 912.882446,4573.021973 
	C765.139465,4524.886719 623.119324,4463.009766 483.815460,4394.651855 
	C370.262177,4338.930664 259.244171,4278.389648 148.764023,4216.853516 
	C108.635460,4194.502930 68.516693,4172.133301 28.239706,4150.052246 
	C23.348349,4147.371094 18.765707,4142.111328 11.923050,4145.075195 
	C8.543122,4151.337891 9.692031,4158.132324 9.689205,4164.694336 
	C9.619495,4326.561035 9.604033,4488.427734 9.734698,4650.294434 
	C9.740539,4657.530273 11.211465,4664.764648 11.999987,4672.000000 
z"/>
<path fill="none" opacity="1.000000" stroke="none" 
	d="
M1585.874634,4672.000000 
	C1587.631226,4666.125977 1593.531982,4665.599609 1599.612549,4665.125977 
	C1615.546631,4663.886719 1631.477417,4662.580566 1647.389160,4661.083984 
	C1815.145996,4645.309082 1975.888062,4601.825195 2131.531494,4538.300293 
	C2240.118408,4493.981445 2345.535889,4442.873535 2449.844727,4389.400391 
	C2506.727051,4360.240234 2563.623047,4331.106934 2620.529785,4301.994141 
	C2704.704834,4258.932617 2789.134766,4216.385254 2875.343750,4177.493652 
	C2979.226807,4130.628418 3085.185791,4089.322754 3194.968750,4058.223877 
	C3270.011475,4036.965820 3346.054443,4020.335938 3423.177979,4008.845215 
	C3518.949219,3994.576416 3615.299316,3989.182373 3712.074463,3992.048584 
	C3860.761719,3996.452637 4005.868652,4022.109863 4147.923828,4065.862061 
	C4262.018066,4101.002441 4372.490234,4145.402832 4480.877441,4195.216797 
	C4596.519043,4248.364258 4708.873535,4307.914062 4820.284180,4369.297852 
	C4872.196289,4397.899414 4923.937012,4426.811523 4975.717285,4455.650879 
	C4984.433105,4460.505371 4992.954590,4465.708496 5002.783203,4471.375000 
	C5004.000000,4538.634277 5004.000000,4605.269043 5004.000000,4672.000000 
	C3865.249756,4672.000000 2726.499512,4672.000000 1585.874634,4672.000000 
z"/>
<path fill="none" opacity="1.000000" stroke="none" 
	d="
M13.874617,4672.000000 
	C11.211465,4664.764648 9.740539,4657.530273 9.734698,4650.294434 
	C9.604033,4488.427734 9.619495,4326.561035 9.689205,4164.694336 
	C9.692031,4158.132324 8.543122,4151.337891 11.923050,4145.075195 
	C18.765707,4142.111328 23.348349,4147.371094 28.239706,4150.052246 
	C68.516693,4172.133301 108.635460,4194.502930 148.764023,4216.853516 
	C259.244171,4278.389648 370.262177,4338.930664 483.815460,4394.651855 
	C623.119324,4463.009766 765.139465,4524.886719 912.882446,4573.021973 
	C1003.468994,4602.535645 1095.471313,4626.465332 1189.290771,4642.971191 
	C1247.633545,4653.235840 1306.330078,4661.276855 1365.573608,4664.625488 
	C1372.695435,4665.027344 1380.446655,4663.760254 1387.291138,4670.599609 
	C930.583069,4672.000000 473.166168,4672.000000 13.874617,4672.000000 
z"/>
<path fill="#70C0D5" opacity="1.000000" stroke="none" 
	d="
M10.000000,4.000000 
	C11.784451,15.987472 11.380363,27.974939 11.380111,39.962414 
	C11.351611,1393.419922 11.353745,2746.877441 11.344284,4100.334961 
	C11.344219,4109.663086 11.579875,4119.017090 10.949617,4128.307129 
	C10.699875,4131.988281 8.384559,4135.529297 5.504854,4139.566895 
	C4.000000,2767.333496 4.000000,1394.666992 4.000000,22.000492 
	C4.000000,16.000492 3.992498,10.000277 4.165172,4.005251 
	C4.166282,3.966715 6.666667,4.000165 10.000000,4.000000 
z"/>
</svg>
            </m.div>
            <svg className='gallery__svg' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="#5594B5" fillOpacity="1" d="M0,96L48,122.7C96,149,192,203,288,229.3C384,256,480,256,576,224C672,192,768,128,864,90.7C960,53,1056,43,1152,64C1248,85,1344,139,1392,165.3L1440,192L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z"></path></svg>
            <div className="flex-gallery">
                <div className="gallery__container">
                   {
                    dogPicturesCONTEXT.slice(nextPicturesCONTEXT, nextPicturesCONTEXT + displayCards()).map((pictures, index) => (
                        <Cards img={pictures} key={index}/>
                    ))
                   }
                </div>
                <m.nav 
                 variants={btn}
                 initial='hidden'
                 animate='visible'
                 exit='exit'
                 className='gallery__nav'>
                    <Input/>                  
                    <Button class='btn btn-secondary' text='home' link='/'/>
                </m.nav>
            </div>
       </main>
    )
};
